tasks.register("compareSentinelApis") {
    doFirst {
        def sentinelApi = file("${project.rootDir}/sentinel/api/sentinel.api")
        def noOpApi = file("${project.rootDir}/sentinel-no-op/api/sentinel-no-op.api")

        if (!sentinelApi.exists() || !noOpApi.exists()) {
            throw new GradleException("API dump files not found. Run `apiDump` task first.")
        }

        def targetBlocks = [
                "public final class com/infinum/sentinel/Sentinel {",
                "public final class com/infinum/sentinel/SentinelInitializer {",
                "public abstract interface class com/infinum/sentinel/Sentinel\$Tool {"
        ]

        def extractRelevantLines = { File apiFile ->
            def relevantLines = [] as Set
            def insideTargetBlock = false

            apiFile.eachLine { line ->
                def trimmed = line.trim()

                if (targetBlocks.contains(trimmed)) {
                    insideTargetBlock = true
                }

                if (insideTargetBlock) {
                    relevantLines.add(line)
                }

                if (trimmed.isEmpty()) {
                    insideTargetBlock = false
                }
            }
            return relevantLines
        }

        def sentinelRelevant = extractRelevantLines(sentinelApi)
        def noOpRelevant = extractRelevantLines(noOpApi)

        def missingLines = sentinelRelevant - noOpRelevant

        if (!missingLines.isEmpty()) {
            println "üö® API mismatch detected! The following APIs in `Sentinel` are missing in `Sentinel no-op`:"
            missingLines.each { println "‚ùå $it" }
            throw new GradleException("API mismatch detected between Sentinel and Sentinel no-op!")
        } else {
            println "‚úÖ API is identical between Sentinel and Sentinel no-op!"
        }
    }
}
